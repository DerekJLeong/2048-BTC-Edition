{"version":3,"sources":["currentBTC.jsx","score.jsx","App.jsx","serviceWorker.js","index.js"],"names":["CurrentBTC","x","toString","replace","roundedBTC","parseFloat","this","props","BTCUSD","toFixed","react_default","a","createElement","className","numberWithCommas","Component","Score","score","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","board","gameOver","message","bitcoin","initBoard","bind","assertThisInitialized","handleTouchStart","handleTouchEnd","placeRandomStartNum","setState","document","querySelector","addEventListener","handleKeyDown","_this2","getBitcoin","interval","setInterval","_this3","fetch","then","response","json","data","bpi","USD","rate","clearInterval","matchlessBoard","forEach","row","newRow","cell","push","blankCoordinates","getBlankCoordinate","randomBlankCoord","Math","floor","random","length","randomStartNumber","getRandomStartNum","console","log","column","direction","handleRemoveAnimationCode","move","currentScore","i","counterClockwise90deg","movedBoard","moveTiles","boardMoved","newBoard","movedBoardWithRandom","checkForGameOver","points","checkForWin","matrix","rows","columns","result","oldBoard","currentCell","unshift","up","right","down","includes","original","updated","JSON","stringify","pressedKey","keyCode","initMove","event","touches","startX","screenX","startY","screenY","changedTouches","deltaX","deltaY","abs","currentBTC","onClick","onTouchEnd","onTouchStart","tabIndex","map","rowIndex","key","App_Cell","cellValue","matched","isNew","Modal","href","target","rel","React","Cell","_ref","classNames","value","concat","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0da53c2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass CurrentBTC extends Component {\r\n   numberWithCommas(x) {\r\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n   }\r\n   render() {\r\n      let roundedBTC = parseFloat(\r\n         this.props.BTCUSD.toString().replace(/,/g, \"\")\r\n      ).toFixed(2);\r\n      return (\r\n         <div className=\"btc_container\">\r\n            <div className=\"btc_img\"></div>\r\n            <p>${this.numberWithCommas(roundedBTC)}</p>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default CurrentBTC;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass Score extends Component {\r\n   render() {\r\n      return (\r\n         <div className=\"score_container\">\r\n            <p>SCORE</p>\r\n            <p>{this.props.score}</p>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Score;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport CurrentBTC from \"./currentBTC\";\r\nimport Score from \"./score\";\r\n\r\nconst API = \"https://api.coindesk.com/v1/bpi/currentprice.json\";\r\n\r\nclass App extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n         board: null,\r\n         score: 0,\r\n         gameOver: false,\r\n         message: \"GOOD LUCK & HODL ON\",\r\n         bitcoin: 0\r\n      };\r\n      this.initBoard = this.initBoard.bind(this);\r\n      this.handleTouchStart = this.handleTouchStart.bind(this);\r\n      this.handleTouchEnd = this.handleTouchEnd.bind(this);\r\n   }\r\n\r\n   // Function to iniate a blank board/game\r\n   initBoard() {\r\n      let board = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\r\n      // Places two random numbers at start of game\r\n      board = this.placeRandomStartNum(this.placeRandomStartNum(board));\r\n      this.setState({ gameOver: false, board, score: 0 });\r\n   }\r\n\r\n   // Function called when the component mounts\r\n   componentWillMount() {\r\n      // When mounted\r\n      // Calls function to iniate the board/game\r\n      this.initBoard();\r\n      // Keyboard event listening\r\n      const body = document.querySelector(\"body\");\r\n      body.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.getBitcoin();\r\n      this.interval = setInterval(() => {\r\n         this.getBitcoin();\r\n      }, 30000);\r\n   }\r\n   getBitcoin() {\r\n      fetch(API)\r\n         .then(response => response.json())\r\n         .then(data => this.setState({ bitcoin: data.bpi.USD.rate }));\r\n   }\r\n\r\n   componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n   }\r\n\r\n   handleRemoveAnimationCode(board) {\r\n      const matchedBoard = board;\r\n      let matchlessBoard = [];\r\n      matchedBoard.forEach(row => {\r\n         let newRow = [];\r\n         row.forEach(cell => {\r\n            cell = cell[1] ? cell[0] : cell;\r\n            newRow.push(cell);\r\n         });\r\n         matchlessBoard.push(newRow);\r\n      });\r\n\r\n      return matchlessBoard;\r\n   }\r\n\r\n   // PLaces a single random starting number on a random blank coordinate on the board\r\n   placeRandomStartNum(board) {\r\n      const blankCoordinates = this.getBlankCoordinate(board);\r\n      const randomBlankCoord =\r\n         blankCoordinates[Math.floor(Math.random() * blankCoordinates.length)];\r\n      const randomStartNumber = this.getRandomStartNum();\r\n\r\n      // 2 = new tile anmiation\r\n      board[randomBlankCoord[0]][randomBlankCoord[1]] = [randomStartNumber, 2];\r\n      console.log(board);\r\n      return board;\r\n   }\r\n   // Interates over each row and each column of said row, if the value is strictly '0'\r\n   // then the blank coordinate gets pushed to an array which is later returned from the function\r\n   // '0' = Blank\r\n   getBlankCoordinate(board) {\r\n      const blankCoordinates = [];\r\n\r\n      for (let row = 0; row < board.length; row++) {\r\n         for (let column = 0; column < board[row].length; column++) {\r\n            if (board[row][column] === 0) {\r\n               blankCoordinates.push([row, column]);\r\n            }\r\n         }\r\n      }\r\n      return blankCoordinates;\r\n   }\r\n   // Generates a random number from given array of starting numbers and returns it\r\n   getRandomStartNum() {\r\n      const fourProbability = 0.125;\r\n      const randomStartNumber = Math.random() < fourProbability ? 4 : 2;\r\n      return randomStartNumber;\r\n   }\r\n\r\n   initMove(direction) {\r\n      this.setState({\r\n         board: this.handleRemoveAnimationCode(this.state.board)\r\n      });\r\n      this.move(direction);\r\n   }\r\n   // Passes direction code to move board in designated direction\r\n   move(direction) {\r\n      // First rotates board into base workable postion\r\n      // 0 -> left, 1 -> up, 2 -> right, 3 -> down\r\n      let currentScore = this.state.score;\r\n\r\n      if (!this.state.gameOver) {\r\n         for (let i = 0; i < direction; ++i) {\r\n            this.setState({\r\n               board: this.counterClockwise90deg(this.state.board)\r\n            });\r\n         }\r\n         const movedBoard = this.moveTiles(this.state.board);\r\n\r\n         if (this.boardMoved(this.state.board, movedBoard.newBoard)) {\r\n            const movedBoardWithRandom = this.placeRandomStartNum(\r\n               movedBoard.newBoard\r\n            );\r\n            if (this.checkForGameOver(movedBoardWithRandom)) {\r\n               this.setState({\r\n                  board: movedBoardWithRandom,\r\n                  gameOver: true,\r\n                  message: \"Game Over!\"\r\n               });\r\n            } else {\r\n               this.setState({\r\n                  board: movedBoardWithRandom,\r\n                  score: (currentScore += movedBoard.points)\r\n               });\r\n            }\r\n         }\r\n         if (this.checkForWin(this.state.score, this.state.bitcoin)) {\r\n            this.setState({\r\n               gameOver: true,\r\n               message: \"You Won! Hodl On!\"\r\n            });\r\n         }\r\n         // Rotates board to original position\r\n         for (var i = direction; i < 4; ++i) {\r\n            this.setState({\r\n               board: this.counterClockwise90deg(this.state.board)\r\n            });\r\n         }\r\n      }\r\n   }\r\n   counterClockwise90deg(matrix) {\r\n      let rows = matrix.length;\r\n      let columns = matrix[0].length;\r\n      let result = [];\r\n      for (let row = 0; row < rows; ++row) {\r\n         // push blank row to result matrix\r\n         result.push([]);\r\n         for (let column = 0; column < columns; column++) {\r\n            // populate the blank row with the previous'\r\n            result[row][column] = matrix[column][columns - row - 1];\r\n         }\r\n      }\r\n      return result;\r\n   }\r\n   moveTiles(oldBoard) {\r\n      let newBoard = [];\r\n      let points = 0;\r\n\r\n      for (let row = 0; row < oldBoard.length; row++) {\r\n         let newRow = [];\r\n         for (let column = oldBoard.length - 1; column >= 0; column--) {\r\n            let currentCell = oldBoard[row][column];\r\n            currentCell === 0\r\n               ? newRow.push(currentCell)\r\n               : newRow.unshift(currentCell);\r\n         }\r\n         newBoard.push(newRow);\r\n      }\r\n\r\n      for (let i = 0; i < 2; i++) {\r\n         for (let row = 0; row < newBoard.length; row++) {\r\n            for (let column = 0; column < newBoard.length; column++) {\r\n               if (\r\n                  newBoard[row][column] > 0 &&\r\n                  newBoard[row][column] === newBoard[row][column + 1]\r\n               ) {\r\n                  newBoard[row][column] = [\r\n                     newBoard[row][column] + newBoard[row][column + 1],\r\n                     1\r\n                  ];\r\n                  newBoard[row][column + 1] = 0;\r\n\r\n                  points += newBoard[row][column][0];\r\n               } else if (\r\n                  newBoard[row][column] === 0 &&\r\n                  newBoard[row][column + 1] > 0\r\n               ) {\r\n                  newBoard[row][column] = newBoard[row][column + 1];\r\n                  newBoard[row][column + 1] = 0;\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      return { newBoard, points };\r\n   }\r\n   checkForGameOver(board) {\r\n      let up = this.counterClockwise90deg(board);\r\n      let right = this.counterClockwise90deg(this.counterClockwise90deg(board));\r\n      let down = this.counterClockwise90deg(\r\n         this.counterClockwise90deg(this.counterClockwise90deg(board))\r\n      );\r\n      let moves = [\r\n         this.boardMoved(board, this.moveTiles(board).newBoard),\r\n         this.boardMoved(up, this.moveTiles(up).newBoard),\r\n         this.boardMoved(right, this.moveTiles(right).newBoard),\r\n         this.boardMoved(down, this.moveTiles(down).newBoard)\r\n      ];\r\n      return moves.includes(true) ? false : true;\r\n   }\r\n   boardMoved(original, updated) {\r\n      return JSON.stringify(updated) !== JSON.stringify(original)\r\n         ? true\r\n         : false;\r\n   }\r\n   checkForWin(score, bitcoin) {\r\n      return score >= parseFloat(bitcoin.replace(/,/g, \"\")) ? true : false;\r\n   }\r\n\r\n   // Handles desigated key presses\r\n   handleKeyDown(pressedKey) {\r\n      const n = 78;\r\n      let direction;\r\n\r\n      if (pressedKey.keyCode >= 37 && pressedKey.keyCode <= 41) {\r\n         direction = pressedKey.keyCode - 37;\r\n         this.initMove(direction);\r\n      } else if (pressedKey.keyCode === n) {\r\n         this.initBoard();\r\n      }\r\n   }\r\n\r\n   handleTouchStart(event) {\r\n      if (this.state.board.gameOver) {\r\n         return;\r\n      }\r\n      if (event.touches.length !== 1) {\r\n         return;\r\n      }\r\n      this.startX = event.touches[0].screenX;\r\n      this.startY = event.touches[0].screenY;\r\n   }\r\n   handleTouchEnd(event) {\r\n      if (this.state.board.gameOver) {\r\n         return;\r\n      }\r\n      if (event.changedTouches.length !== 1) {\r\n         return;\r\n      }\r\n      let deltaX = event.changedTouches[0].screenX - this.startX;\r\n      let deltaY = event.changedTouches[0].screenY - this.startY;\r\n      let direction = -1;\r\n      if (Math.abs(deltaX) > 3 * Math.abs(deltaY) && Math.abs(deltaX) > 30) {\r\n         direction = deltaX > 0 ? 2 : 0;\r\n      } else if (\r\n         Math.abs(deltaY) > 3 * Math.abs(deltaX) &&\r\n         Math.abs(deltaY) > 30\r\n      ) {\r\n         direction = deltaY > 0 ? 3 : 1;\r\n      }\r\n      if (direction !== -1) {\r\n         //TODO why doesnt this function work here?\r\n         // this.initMove(direction);\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"game_container\">\r\n            <div className=\"top_container\">\r\n               <CurrentBTC BTCUSD={this.state.bitcoin} />\r\n               <Score score={this.state.score} />\r\n               <p className=\"intro\" onClick={this.initMove.bind(this)}>\r\n                  Join the numbers together and get a score <br />\r\n                  greater than the <b>current USD/Bitcoin price!</b>\r\n               </p>\r\n               <div\r\n                  className=\"reset_button\"\r\n                  onClick={this.initBoard}\r\n                  onTouchEnd={this.initBoard}\r\n               >\r\n                  New Game\r\n               </div>\r\n            </div>\r\n            <div className=\"middle_container\">\r\n               <table\r\n                  className=\"game_board\"\r\n                  onTouchStart={this.handleTouchStart}\r\n                  onTouchEnd={this.handleTouchEnd}\r\n                  tabIndex=\"1\"\r\n               >\r\n                  {this.state.board.map((row, rowIndex) => (\r\n                     <tr key={rowIndex}>\r\n                        {row.map((cell, i) => (\r\n                           <Cell\r\n                              key={i}\r\n                              cellValue={cell[1] ? cell[0] : cell}\r\n                              // cell[1] = 1(matched) = 2(new)\r\n                              matched={cell[1] === 1 ? true : false}\r\n                              isNew={cell[1] === 2 ? true : false}\r\n                           />\r\n                        ))}\r\n                     </tr>\r\n                  ))}\r\n               </table>\r\n               <Modal {...this.state} />\r\n            </div>\r\n            <div className=\"bottom_container\">\r\n               <p className=\"game_explanation\">\r\n                  <b>How to play:</b> Use your\r\n                  <b> arrow keys</b> to move the tiles. When two tiles with the\r\n                  same number touch, they\r\n                  <b> merge into one!</b>\r\n               </p>\r\n               <hr />\r\n               <p className=\"game_credits\">\r\n                  <b>Note:</b> The game on{\" \"}\r\n                  <a\r\n                     href=\"http://git.io/2048\"\r\n                     target=\" blank\"\r\n                     rel=\"noopener noreferrer\"\r\n                  >\r\n                     this site\r\n                  </a>{\" \"}\r\n                  is the original version of 2048. 2048 Bitcoin Edition is a\r\n                  derivative inspired by the original, created by{\" \"}\r\n                  <a\r\n                     href=\"http://gabrielecirulli.com\"\r\n                     target=\" blank\"\r\n                     rel=\"noopener noreferrer\"\r\n                  >\r\n                     Gabriele Cirulli\r\n                  </a>\r\n                  . Based on{\" \"}\r\n                  <a\r\n                     href=\"https://itunes.apple.com/us/app/1024!/id823499224\"\r\n                     target=\"_blank\"\r\n                     rel=\"noopener noreferrer\"\r\n                  >\r\n                     1024 by Veewo Studio\r\n                  </a>{\" \"}\r\n                  and conceptually similar to{\" \"}\r\n                  <a\r\n                     href=\"http://asherv.com/threes/\"\r\n                     target=\"_blank\"\r\n                     rel=\"noopener noreferrer\"\r\n                  >\r\n                     Threes by Asher Vollmer\r\n                  </a>\r\n                  .\r\n               </p>\r\n               <hr />\r\n               <p>\r\n                  © 2019 Developed by{\" \"}\r\n                  <a\r\n                     href=\"http://derekjleong.tech/\"\r\n                     target=\" blank\"\r\n                     rel=\"noopener noreferrer\"\r\n                  >\r\n                     Derek J Leong\r\n                  </a>\r\n               </p>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nfunction Modal(props) {\r\n   return (\r\n      <div>\r\n         {props.gameOver ? (\r\n            <div className=\"modal_container\">\r\n               <p className=\"modal_message\">{props.message}</p>\r\n            </div>\r\n         ) : null}\r\n      </div>\r\n   );\r\n}\r\n\r\n// Renders cells\r\n// Changes className according to value and only displays value if >0\r\nconst Cell = ({ cellValue, matched, isNew }) => {\r\n   let classNames = \"tile\";\r\n   let value = cellValue === 0 ? \"\" : cellValue;\r\n   if (isNew) {\r\n      classNames += \" new\";\r\n   }\r\n   if (matched) {\r\n      classNames += \" matched\";\r\n   }\r\n   if (value) {\r\n      classNames += ` color_${value}`;\r\n   }\r\n   if (value > 2048) {\r\n      classNames += \" color_super\";\r\n   }\r\n   return (\r\n      <td className=\"cell\">\r\n         <div className={classNames}>{value}</div>\r\n      </td>\r\n   );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}